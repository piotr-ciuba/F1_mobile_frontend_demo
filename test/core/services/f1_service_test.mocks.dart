// Mocks generated by Mockito 5.4.5 from annotations
// in f1_mobile_frontend_demo/test/core/services/f1_service_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i7;

import 'package:dio/dio.dart' as _i2;
import 'package:f1_mobile_frontend_demo/common/endpoints.dart' as _i3;
import 'package:f1_mobile_frontend_demo/core/services/f1_service.dart' as _i6;
import 'package:f1_mobile_frontend_demo/core/utils/api_client.dart' as _i5;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDio_0 extends _i1.SmartFake implements _i2.Dio {
  _FakeDio_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEndpoints_1 extends _i1.SmartFake implements _i3.Endpoints {
  _FakeEndpoints_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResponse_2<T> extends _i1.SmartFake implements _i2.Response<T> {
  _FakeResponse_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [Endpoints].
///
/// See the documentation for Mockito's code generation for more information.
class MockEndpoints extends _i1.Mock implements _i3.Endpoints {
  MockEndpoints() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get f1Races => (super.noSuchMethod(
        Invocation.getter(#f1Races),
        returnValue: _i4.dummyValue<String>(
          this,
          Invocation.getter(#f1Races),
        ),
      ) as String);

  @override
  String get f1Status => (super.noSuchMethod(
        Invocation.getter(#f1Status),
        returnValue: _i4.dummyValue<String>(
          this,
          Invocation.getter(#f1Status),
        ),
      ) as String);

  @override
  String get f1Seasons => (super.noSuchMethod(
        Invocation.getter(#f1Seasons),
        returnValue: _i4.dummyValue<String>(
          this,
          Invocation.getter(#f1Seasons),
        ),
      ) as String);

  @override
  String get f1Drivers => (super.noSuchMethod(
        Invocation.getter(#f1Drivers),
        returnValue: _i4.dummyValue<String>(
          this,
          Invocation.getter(#f1Drivers),
        ),
      ) as String);

  @override
  String get f1Results => (super.noSuchMethod(
        Invocation.getter(#f1Results),
        returnValue: _i4.dummyValue<String>(
          this,
          Invocation.getter(#f1Results),
        ),
      ) as String);

  @override
  String get f1Circuits => (super.noSuchMethod(
        Invocation.getter(#f1Circuits),
        returnValue: _i4.dummyValue<String>(
          this,
          Invocation.getter(#f1Circuits),
        ),
      ) as String);

  @override
  String get f1Constructors => (super.noSuchMethod(
        Invocation.getter(#f1Constructors),
        returnValue: _i4.dummyValue<String>(
          this,
          Invocation.getter(#f1Constructors),
        ),
      ) as String);
}

/// A class which mocks [ApiClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockApiClient extends _i1.Mock implements _i5.ApiClient {
  MockApiClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Dio get dio => (super.noSuchMethod(
        Invocation.getter(#dio),
        returnValue: _FakeDio_0(
          this,
          Invocation.getter(#dio),
        ),
      ) as _i2.Dio);

  @override
  _i3.Endpoints get endpoints => (super.noSuchMethod(
        Invocation.getter(#endpoints),
        returnValue: _FakeEndpoints_1(
          this,
          Invocation.getter(#endpoints),
        ),
      ) as _i3.Endpoints);
}

/// A class which mocks [F1Service].
///
/// See the documentation for Mockito's code generation for more information.
class MockF1Service extends _i1.Mock implements _i6.F1Service {
  MockF1Service() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<_i2.Response<dynamic>> getF1Resource({
    required _i6.F1Resource? resource,
    int? pageLimit,
    int? offset,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getF1Resource,
          [],
          {
            #resource: resource,
            #pageLimit: pageLimit,
            #offset: offset,
          },
        ),
        returnValue:
            _i7.Future<_i2.Response<dynamic>>.value(_FakeResponse_2<dynamic>(
          this,
          Invocation.method(
            #getF1Resource,
            [],
            {
              #resource: resource,
              #pageLimit: pageLimit,
              #offset: offset,
            },
          ),
        )),
      ) as _i7.Future<_i2.Response<dynamic>>);
}
